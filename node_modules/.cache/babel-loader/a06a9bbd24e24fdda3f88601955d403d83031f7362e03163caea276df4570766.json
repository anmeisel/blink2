{"ast":null,"code":"var _jsxFileName = \"/Users/anameisel/Documents/personal/learning/iungo/Software-Engineering/week-6/244001_glossary/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\n// import Question from './model/Questions'\nimport Glossary from './model/Glossary';\nimport QuestionButton from './components/QuestionButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState();\n  const [glossary, setGlossary] = useState([new Glossary(1, \"React\", \"JavaScript framework that works with JSX files.\", false, [\"4\", \"3\", \"10\"]), new Glossary(2, \"JSX\", \"HTML + JavaScript. Server-side scripting. Functions can be returned in pure HTML.\", false, [\"4\", \"3\", \"10\"]), new Glossary(3, \"XML\", \"Extensible Markup Language. XML was designed to carry data - with focus on what data is. Does not display data.\", false, [\"4\", \"3\", \"10\"]), new Glossary(4, \"To start a project...\", \"npx create-react-app [name of project]\", false, [\"4\", \"3\", \"10\"]), new Glossary(5, \"Component\", \"Reusable functions. React only re-renders components that have changed. State is like a variable.\", false, [\"4\", \"3\", \"10\"]), new Glossary(6, \"useState\", \"Re-renders once the function has been manipulated. It’s a React hook - functional compenet that tracks its own data. It takes a reference to the value (variable - but don't refer to this variable in the function), and then a function name. UseState will start at whatever is in its parameter. UseState is how we use a function to a component instead of a class. E.g.: const [count, setCount] = useState(0). A state variable should always be declared at the highest level its needed.\", false, [\"4\", \"3\", \"10\"]), new Glossary(7, \"Hooks\", \"functional components as opposed to class components. Functional component is a reusable, imported. A function that returns some HTML.\", false, [\"4\", \"3\", \"10\"]), new Glossary(8, \"Props\", \"A generic parameter passed via the function. Object full of properties that we can assign. For example, you can give props to a component and assign them in the component name in app.js.\", false, [\"4\", \"3\", \"10\"]), new Glossary(9, \"OnChange\", \"This will always give you an event object. Every onChange passes an event object, containing info about the event.\", false, [\"4\", \"3\", \"10\"]), new Glossary(10, \"Callback function\", \"Parent (app.js) passes a State function as props to a child element (colourbutton.js). The child gets State of parent. This function or state can be a prop. Steps for making a prop: 1. Make a custom prop in your app.js component name i.e. <ColourButton col={'green'}/>. 2. Bring prop as an attribute in the component function name i.e. ColourButton(props). 3. Use it inside your component i.e. style={{backgroundColor: props.col}}. All inline!\", false, [\"4\", \"3\", \"10\"]), new Glossary(11, \"Toggle\", \"Make a useState(false). Underneath make a toggleClass function (i.e. const toggleClass = () => {setBackground(!background)}). In the button inline make a ternary operator (i.e. style={{ backgroundColor: background ? 'darkslateblue' : 'green' }} ).\", false, [\"4\", \"3\", \"10\"]), new Glossary(12, \"Map\", \"Like a For loop. Applies a function to an array and returns a new array. Make sure to always put a key right inside the return statement when calling the component.\", false, [\"4\", \"3\", \"10\"]), new Glossary(13, \"Flex\", \"Flex will always affect the child elements. Full flex is 1. 50% will be 0.5.\", false, [\"4\", \"3\", \"10\"])]);\n  const toggleVisibility = id => {\n    setGlossary(glossary.map(item => item.id === id ? {\n      ...item,\n      isVisible: !item.isVisible\n    } : item));\n  };\n\n  // for Quiz:\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  function quiz() {\n    function nextQuestion() {\n      currentQuestion >= glossary.length - 1 ? setCurrentQuestion(0) : setCurrentQuestion(currentQuestion + 1);\n    }\n    function onAttempt(attempt) {\n      if (glossary[currentQuestion].checkAnswer(attempt)) {\n        setMessage(\"Correct!! :)\");\n        setTimeout(() => nextQuestion(), 1500);\n      } else {\n        setMessage(\"Incorrect.. :(\");\n      }\n    }\n    const answers = glossary[currentQuestion].shuffleOptions();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glossary-container\",\n        children: glossary.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"glossary\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"subject\",\n            onClick: () => toggleVisibility(item.id),\n            children: item.subject\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"terms\",\n            style: {\n              display: item.isVisible ? 'block' : 'none'\n            },\n            children: item.correctAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Quiz!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"What is\", glossary[currentQuestion].subject, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answers\",\n          children: answers.map(option => {\n            return /*#__PURE__*/_jsxDEV(QuestionButton, {\n              label: option,\n              onAttempt: () => onAttempt(option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Tp5evDBgr+rrrVm7T4ZIg2wbFys=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Glossary","QuestionButton","jsxDEV","_jsxDEV","App","_s","message","setMessage","glossary","setGlossary","toggleVisibility","id","map","item","isVisible","currentQuestion","setCurrentQuestion","quiz","nextQuestion","length","onAttempt","attempt","checkAnswer","setTimeout","answers","shuffleOptions","className","children","onClick","subject","fileName","_jsxFileName","lineNumber","columnNumber","style","display","correctAnswer","option","label","_c","$RefreshReg$"],"sources":["/Users/anameisel/Documents/personal/learning/iungo/Software-Engineering/week-6/244001_glossary/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\n// import Question from './model/Questions'\nimport Glossary from './model/Glossary'\nimport QuestionButton from './components/QuestionButton'\n\nfunction App() {\n  const [message, setMessage] = useState()\n  const [glossary, setGlossary] = useState([\n    new Glossary(1, \"React\", \"JavaScript framework that works with JSX files.\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(2, \"JSX\", \"HTML + JavaScript. Server-side scripting. Functions can be returned in pure HTML.\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(3, \"XML\", \"Extensible Markup Language. XML was designed to carry data - with focus on what data is. Does not display data.\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(4, \"To start a project...\", \"npx create-react-app [name of project]\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(5, \"Component\", \"Reusable functions. React only re-renders components that have changed. State is like a variable.\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(6, \"useState\", \"Re-renders once the function has been manipulated. It’s a React hook - functional compenet that tracks its own data. It takes a reference to the value (variable - but don't refer to this variable in the function), and then a function name. UseState will start at whatever is in its parameter. UseState is how we use a function to a component instead of a class. E.g.: const [count, setCount] = useState(0). A state variable should always be declared at the highest level its needed.\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(7, \"Hooks\", \"functional components as opposed to class components. Functional component is a reusable, imported. A function that returns some HTML.\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(8, \"Props\", \"A generic parameter passed via the function. Object full of properties that we can assign. For example, you can give props to a component and assign them in the component name in app.js.\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(9, \"OnChange\", \"This will always give you an event object. Every onChange passes an event object, containing info about the event.\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(10, \"Callback function\", \"Parent (app.js) passes a State function as props to a child element (colourbutton.js). The child gets State of parent. This function or state can be a prop. Steps for making a prop: 1. Make a custom prop in your app.js component name i.e. <ColourButton col={'green'}/>. 2. Bring prop as an attribute in the component function name i.e. ColourButton(props). 3. Use it inside your component i.e. style={{backgroundColor: props.col}}. All inline!\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(11, \"Toggle\", \"Make a useState(false). Underneath make a toggleClass function (i.e. const toggleClass = () => {setBackground(!background)}). In the button inline make a ternary operator (i.e. style={{ backgroundColor: background ? 'darkslateblue' : 'green' }} ).\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(12, \"Map\", \"Like a For loop. Applies a function to an array and returns a new array. Make sure to always put a key right inside the return statement when calling the component.\", false, [\"4\", \"3\", \"10\"]),\n    new Glossary(13, \"Flex\", \"Flex will always affect the child elements. Full flex is 1. 50% will be 0.5.\", false, [\"4\", \"3\", \"10\"]),\n  ])\n\n  const toggleVisibility = (id) => {\n    setGlossary(glossary.map(item =>\n      item.id === id ? { ...item, isVisible: !item.isVisible } : item\n    ));\n  };\n\n  // for Quiz:\n\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n\n  function quiz() {\n    function nextQuestion() {\n      currentQuestion >= glossary.length - 1 ?\n        setCurrentQuestion(0) : setCurrentQuestion(currentQuestion + 1)\n    }\n  \n    function onAttempt(attempt) {\n      if (glossary[currentQuestion].checkAnswer(attempt)) {\n        setMessage(\"Correct!! :)\")\n        setTimeout(() => nextQuestion(), 1500);\n      } else {\n        setMessage(\"Incorrect.. :(\")\n      }\n    }\n  \n    const answers = glossary[currentQuestion].shuffleOptions()\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"glossary-container\">\n          {glossary.map(item => (\n            <div className=\"glossary\">\n            <button key={item.id} className=\"subject\" onClick={() => toggleVisibility(item.id)}>\n              {item.subject}</button>\n            <button className=\"terms\" style={{ display: item.isVisible ? 'block' : 'none' }}>{item.correctAnswer}</button>\n            </div>\n          ))}\n        </div>\n        <div className=\"quiz\">\n          <h1>Quiz!</h1>\n            <div>What is{glossary[currentQuestion].subject}?</div>\n            <h3>{message}</h3>\n            <div className=\"answers\"> \n            {answers.map((option) => {\n              return (\n                <QuestionButton label={option} onAttempt={() => onAttempt(option)}/>\n              )\n            })}\n            </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}