{"ast":null,"code":"var _jsxFileName = \"/Users/anameisel/Documents/personal/learning/iungo/Software-Engineering/week-6/244001_glossary/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport Glossary from './model/Glossary';\nimport GlossaryArray from './model/GlossaryArray';\nimport GlossaryButton from './components/GlossaryButton';\nimport QuestionButton from './components/QuestionButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [glossary, setGlossary] = useState(GlossaryArray);\n\n  // for Quiz:\n\n  function nextQuestion() {\n    setMessage(\"\");\n    currentQuestion >= glossary.length - 1 ? setCurrentQuestion(0) : setCurrentQuestion(currentQuestion + 1);\n  }\n  function onAttempt(attempt) {\n    if (glossary[currentQuestion].checkAnswer(attempt)) {\n      setMessage(\"Correct!! :)\");\n      setTimeout(() => nextQuestion(), 1500);\n    } else {\n      setMessage(\"Incorrect.. :(\");\n    }\n  }\n  const toggleVisibility = index => {\n    const updatedGlossary = [...glossary];\n    updatedGlossary[index].isVisible = !updatedGlossary[index].isVisible;\n    setGlossary(updatedGlossary);\n  };\n\n  // const [targetIndex, setTargetIndex] = useState(0)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glossary-container\",\n        children: glossary.map((item, index) => /*#__PURE__*/_jsxDEV(GlossaryButton, {\n          item: item,\n          toggleVisibility: () => toggleVisibility()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Quiz time!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"What is \", glossary[currentQuestion].question, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answers\",\n          children: glossary[currentQuestion].shuffleOptions().map((option, index) => {\n            return /*#__PURE__*/_jsxDEV(QuestionButton, {\n              label: option,\n              onAttempt: () => onAttempt(option)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iCL7uGttFSw+UZxX3BlQmkHkcCI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Glossary","GlossaryArray","GlossaryButton","QuestionButton","jsxDEV","_jsxDEV","App","_s","message","setMessage","currentQuestion","setCurrentQuestion","glossary","setGlossary","nextQuestion","length","onAttempt","attempt","checkAnswer","setTimeout","toggleVisibility","index","updatedGlossary","isVisible","className","children","map","item","fileName","_jsxFileName","lineNumber","columnNumber","question","shuffleOptions","option","label","_c","$RefreshReg$"],"sources":["/Users/anameisel/Documents/personal/learning/iungo/Software-Engineering/week-6/244001_glossary/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport Glossary from './model/Glossary'\nimport GlossaryArray from './model/GlossaryArray'\nimport GlossaryButton from './components/GlossaryButton'\nimport QuestionButton from './components/QuestionButton'\n\nfunction App() {\n  const [message, setMessage] = useState()\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [glossary, setGlossary] = useState(GlossaryArray)\n\n  // for Quiz:\n\n  function nextQuestion() {\n    setMessage(\"\")\n    currentQuestion >= glossary.length - 1 ?\n      setCurrentQuestion(0) : setCurrentQuestion(currentQuestion + 1)\n  }\n  \n  function onAttempt(attempt) {\n    if (glossary[currentQuestion].checkAnswer(attempt)) {\n      setMessage(\"Correct!! :)\")\n      setTimeout(() => nextQuestion(), 1500);\n    } else {\n      setMessage(\"Incorrect.. :(\")\n    }\n  }\n\n  const toggleVisibility = (index) => {\n    const updatedGlossary = [...glossary]\n    updatedGlossary[index].isVisible = !updatedGlossary[index].isVisible\n    setGlossary(updatedGlossary)\n  }\n\n  // const [targetIndex, setTargetIndex] = useState(0)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"glossary-container\">\n          {glossary.map((item, index) => (\n            <GlossaryButton key={index} item={item} toggleVisibility={() => toggleVisibility()}/>\n          ))}\n        </div>\n        <div className=\"quiz\">\n          <h1>Quiz time!</h1>\n            <div>What is {glossary[currentQuestion].question}?</div>\n            <h3>{message}</h3>\n            <div className=\"answers\"> \n            {glossary[currentQuestion].shuffleOptions().map((option, index) => {\n              return (\n                <QuestionButton key={index} label={option} onAttempt={() => onAttempt(option)}/>\n              )\n            })}\n            </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}