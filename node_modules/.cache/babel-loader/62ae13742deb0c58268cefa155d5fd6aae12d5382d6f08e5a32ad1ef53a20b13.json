{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __require = /* @__PURE__ */(x => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function (x) {\n  if (typeof require !== \"undefined\") return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not supported');\n});\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = {\n    exports: {}\n  }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// package.json\nvar require_package = __commonJS({\n  \"package.json\"(exports, module) {\n    module.exports = {\n      scripts: {\n        lint: \"run -T eslint . --ext .ts,.tsx\",\n        clean: \"rm -rf ./dist\",\n        dev: \"parcel public/test.html\",\n        docs: \"typedoc src/index.ts\",\n        build: \"run -T tsup src/index.ts --format cjs,esm --dts && run -T publint\",\n        prepublish: \"npm run clean && npm run build\",\n        test: \"run -T jest --config ./jestconfig.js\",\n        \"test:watch\": \"run -T jest --config ./jestconfig.js --watchAll\"\n      },\n      name: \"@giphy/js-fetch-api\",\n      version: \"5.4.0\",\n      description: \"Javascript API to fetch gifs and stickers from the GIPHY API.\",\n      homepage: \"https://github.com/Giphy/giphy-js/tree/master/packages/fetch-api\",\n      main: \"dist/index.cjs\",\n      types: \"dist/index.d.ts\",\n      module: \"dist/index.js\",\n      type: \"module\",\n      sideEffects: false,\n      exports: {\n        \".\": {\n          types: \"./dist/index.d.ts\",\n          import: \"./dist/index.js\",\n          require: \"./dist/index.cjs\"\n        },\n        \"./package.json\": \"./package.json\"\n      },\n      files: [\"dist/\", \"src/**/*\"],\n      license: \"MIT\",\n      publishConfig: {\n        access: \"public\"\n      },\n      dependencies: {\n        \"@giphy/js-types\": \"*\",\n        \"@giphy/js-util\": \"*\"\n      },\n      devDependencies: {\n        \"jest-fetch-mock\": \"^3.0.3\",\n        \"parcel-bundler\": \"latest\",\n        typedoc: \"^0.20.37\",\n        \"typedoc-thunder-theme\": \"^0.0.3\",\n        typescript: \"^5.0.4\"\n      }\n    };\n  }\n});\n\n// src/index.ts\nimport { appendGiphySDKRequestHeader, getGiphySDKRequestHeaders } from \"@giphy/js-util\";\n\n// src/api.ts\nimport { getPingbackId } from \"@giphy/js-util\";\n\n// src/normalize/gif.ts\nvar BOOL_PROPS = [\"is_anonymous\", \"is_community\", \"is_featured\", \"is_hidden\", \"is_indexable\", \"is_preserve_size\", \"is_realtime\", \"is_removed\", \"is_sticker\", \"is_dynamic\"\n// not finalized, and not adding to Gif type until type RFC is finished\n];\nvar USER_BOOL_PROPS = [\"suppress_chrome\", \"is_public\", \"is_verified\"];\nvar makeBool = obj => prop => obj[prop] = !!obj[prop];\nvar getTag = tag => typeof tag === \"string\" ? tag : tag.text;\nvar normalize = gif => {\n  const newGif = __spreadValues({}, gif);\n  newGif.id = String(newGif.id);\n  newGif.tags = (newGif.tags || []).map(getTag);\n  BOOL_PROPS.forEach(makeBool(newGif));\n  Object.keys(newGif.images || {}).forEach(name => {\n    const img = newGif.images[name];\n    img.width = parseInt(img.width);\n    img.height = parseInt(img.height);\n  });\n  const {\n    user\n  } = newGif;\n  if (user) {\n    const newUser = __spreadValues({}, user);\n    USER_BOOL_PROPS.forEach(makeBool(newUser));\n    newGif.user = newUser;\n  }\n  return newGif;\n};\nvar normalizeGif = result => {\n  result.data = normalize(result.data);\n  return result;\n};\nvar normalizeGifs = result => {\n  result.data = result.data.map(gif => normalize(gif));\n  return result;\n};\n\n// src/constants.ts\nvar gl = (typeof window !== \"undefined\" ? window : global) || {};\nvar serverUrl = gl.GIPHY_API_URL || \"https://api.giphy.com/v1/\";\nvar setServerUrl = url => {\n  serverUrl = url;\n};\n\n// src/fetch-error.ts\nvar FetchError = class extends Error {\n  constructor(message, url) {\n    let status = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let statusText = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n    super(message);\n    this.url = url;\n    this.status = status;\n    this.statusText = statusText;\n  }\n};\nvar fetch_error_default = FetchError;\n\n// src/request.ts\nvar ERROR_PREFIX = \"@giphy/js-fetch-api: \";\nvar DEFAULT_ERROR = \"Error fetching\";\nvar identity = i => i;\nvar requestMap = {};\nvar maxLife = 6e4;\nvar errorMaxLife = 6e3;\nvar purgeCache = () => {\n  const now = Date.now();\n  Object.keys(requestMap).forEach(key => {\n    const ttl = requestMap[key].isError ? errorMaxLife : maxLife;\n    if (now - requestMap[key].ts >= ttl) {\n      delete requestMap[key];\n    }\n  });\n};\nfunction request(url) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    apiVersion = 1,\n    noCache = false,\n    normalizer = identity\n  } = options;\n  const serverUrl_ = serverUrl.replace(/\\/v\\d+\\/$/, \"/v\".concat(apiVersion, \"/\"));\n  purgeCache();\n  if (!requestMap[url] || noCache) {\n    const fullUrl = \"\".concat(serverUrl_).concat(url);\n    const makeRequest = () => __async(this, null, function* () {\n      var _a2;\n      let fetchError;\n      try {\n        const response = yield fetch(fullUrl, {\n          method: \"get\"\n        });\n        if (response.ok) {\n          const result = yield response.json();\n          if (!((_a2 = result.meta) == null ? void 0 : _a2.response_id)) {\n            throw {\n              message: \"synthetic response\"\n            };\n          } else {\n            return normalizer(result);\n          }\n        } else {\n          let message = DEFAULT_ERROR;\n          try {\n            const result = yield response.json();\n            if (result.message) message = result.message;\n          } catch (_) {}\n          if (requestMap[url]) {\n            requestMap[url].isError = true;\n          }\n          fetchError = new fetch_error_default(\"\".concat(ERROR_PREFIX).concat(message), fullUrl, response.status, response.statusText);\n        }\n      } catch (unexpectedError) {\n        fetchError = new fetch_error_default(unexpectedError.message, fullUrl);\n        if (requestMap[url]) {\n          requestMap[url].isError = true;\n        }\n      }\n      throw fetchError;\n    });\n    requestMap[url] = {\n      request: makeRequest(),\n      ts: Date.now()\n    };\n  }\n  return requestMap[url].request;\n}\nvar request_default = request;\n\n// src/api.ts\nvar getType = options => options && options.type ? options.type : \"gifs\";\nvar GiphyFetch = class {\n  constructor(apiKey) {\n    var _this = this;\n    let qsParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    /**\n     * @hidden\n     */\n    this.getQS = function () {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const searchParams = new URLSearchParams(__spreadValues(__spreadProps(__spreadValues({}, options), {\n        api_key: _this.apiKey,\n        pingback_id: getPingbackId()\n      }), _this.qsParams));\n      return searchParams.toString();\n    };\n    this.apiKey = apiKey;\n    this.qsParams = qsParams;\n  }\n  /**\n   * A list of categories\n   *\n   * @param {CategoriesOptions} [options]\n   * @returns {Promise<CategoriesResult>}\n   */\n  categories(options) {\n    return request_default(\"gifs/categories?\".concat(this.getQS(options)));\n  }\n  /**\n   * Get a single gif by a id\n   * @param {string} id\n   * @returns {Promise<GifsResult>}\n   **/\n  gif(id, options) {\n    const prefix = (options == null ? void 0 : options.internal) ? \"internal/\" : \"\";\n    return request_default(\"\".concat(prefix, \"gifs/\").concat(id, \"?\").concat(this.getQS()), {\n      normalizer: normalizeGif\n    });\n  }\n  gifs(arg1, arg2) {\n    if (Array.isArray(arg1)) {\n      return request_default(\"gifs?\".concat(this.getQS({\n        ids: arg1.join(\",\")\n      })), {\n        normalizer: normalizeGifs\n      });\n    }\n    return request_default(\"gifs/categories/\".concat(arg1, \"/\").concat(arg2, \"?\").concat(this.getQS()), {\n      normalizer: normalizeGifs\n    });\n  }\n  emoji(options) {\n    return request_default(\"emoji?\".concat(this.getQS(options)), {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Returns a list of all the default emoji variations\n   *\n   * @param {PaginationOptions} options\n   * @returns {Promise<GifsResult>}\n   **/\n  emojiDefaultVariations(options) {\n    return request_default(\"emoji?\".concat(this.getQS(options)), {\n      apiVersion: 2,\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Returns a list of gifs representing all the variations for the emoji\n   *\n   * @param {string} id\n   * @returns {Promise<NonPaginatedGifsResult>}\n   **/\n  emojiVariations(id) {\n    return request_default(\"emoji/\".concat(id, \"/variations?\").concat(this.getQS()), {\n      apiVersion: 2,\n      normalizer: normalizeGifs\n    });\n  }\n  animate(text) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const qsParams = this.getQS(__spreadProps(__spreadValues({}, options), {\n      m: text\n    }));\n    return request_default(\"text/animate?\".concat(qsParams), {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * @param term: string The term you're searching for\n   * @param options: SearchOptions\n   * @returns {Promise<GifsResult>}\n   **/\n  search(term) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const q = options.channel ? \"@\".concat(options.channel, \" \").concat(term) : term;\n    let excludeDynamicResults;\n    if (options.type === \"text\") {\n      excludeDynamicResults = true;\n    }\n    const qsParams = this.getQS(__spreadProps(__spreadValues({\n      rating: \"pg-13\"\n    }, options), {\n      q,\n      excludeDynamicResults\n    }));\n    return request_default(\"\".concat(getType(options), \"/search?\").concat(qsParams), {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Get a list of subcategories\n   * @param {string} category\n   * @param {SubcategoriesOptions} options\n   * @returns {Promise<CategoriesResult>}\n   */\n  subcategories(category, options) {\n    return request_default(\"gifs/categories/\".concat(category, \"?\").concat(this.getQS(options)));\n  }\n  /**\n   * Get trending gifs\n   *\n   * @param {TrendingOptions} options\n   * @returns {Promise<GifsResult>}\n   */\n  trending() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return request_default(\"\".concat(getType(options), \"/trending?\").concat(this.getQS(__spreadValues({\n      rating: \"pg-13\"\n    }, options))), {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Get a random gif\n   * @param {RandomOptions} options\n   * @returns {Promise<GifResult>}\n   **/\n  random(options) {\n    return request_default(\"\".concat(getType(options), \"/random?\").concat(this.getQS(__spreadValues({\n      rating: \"pg-13\"\n    }, options))), {\n      noCache: true,\n      normalizer: normalizeGif\n    });\n  }\n  /**\n   * Get related gifs by a id\n   * @param {string} id\n   * @param {SubcategoriesOptions} options\n   * @returns {Promise<GifsResult>}\n   **/\n  related(id) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      type = \"gifs\"\n    } = options;\n    return request_default(\"\".concat(type, \"/related?\").concat(this.getQS(__spreadValues({\n      gif_id: id,\n      rating: \"pg-13\"\n    }, options))), {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Search for channels based on a term\n   * @param {string} term\n   * @param options: SearchOptions\n   * @returns {Promise<ChannelsResult>}\n   **/\n  channels(term) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return request_default(\"channels/search?\".concat(this.getQS(__spreadValues({\n      q: term,\n      rating: \"pg-13\"\n    }, options))));\n  }\n};\nvar api_default = GiphyFetch;\n\n// src/paginator.ts\nvar gifPaginator = function (fetchGifs) {\n  let initialGifs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const gifs = [...initialGifs];\n  const gifIds = initialGifs.map(g => g.id);\n  let offset = initialGifs.length;\n  let isDoneFetching = false;\n  return () => __async(void 0, null, function* () {\n    if (isDoneFetching) {\n      return gifs;\n    }\n    const result = yield fetchGifs(offset);\n    const {\n      pagination,\n      data: newGifs\n    } = result;\n    offset = pagination.count + pagination.offset;\n    isDoneFetching = offset === pagination.total_count;\n    newGifs.forEach(gif => {\n      const {\n        id\n      } = gif;\n      if (!gifIds.includes(id)) {\n        gifs.push(gif);\n        gifIds.push(id);\n      }\n    });\n    return [...gifs];\n  });\n};\n\n// src/index.ts\nvar _a;\nif (typeof __require !== \"undefined\") {\n  const {\n    version\n  } = require_package();\n  if (!((_a = getGiphySDKRequestHeaders()) == null ? void 0 : _a.get(\"X-GIPHY-SDK-NAME\"))) {\n    appendGiphySDKRequestHeader(\"X-GIPHY-SDK-NAME\", \"FetchAPI\");\n    appendGiphySDKRequestHeader(\"X-GIPHY-SDK-VERSION\", version);\n  }\n}\nexport { fetch_error_default as FetchError, api_default as GiphyFetch, gifPaginator, request_default as request, serverUrl, setServerUrl };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropNames","getOwnPropertyNames","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__require","x","require","Proxy","get","apply","arguments","Error","__commonJS","cb","mod","__require2","exports","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","done","then","require_package","package.json","module","scripts","lint","clean","dev","docs","build","prepublish","test","name","version","description","homepage","main","types","type","sideEffects","import","files","license","publishConfig","access","dependencies","devDependencies","typedoc","typescript","appendGiphySDKRequestHeader","getGiphySDKRequestHeaders","getPingbackId","BOOL_PROPS","USER_BOOL_PROPS","makeBool","getTag","tag","text","normalize","gif","newGif","id","String","tags","map","forEach","keys","images","img","width","parseInt","height","user","newUser","normalizeGif","result","data","normalizeGifs","gl","window","global","serverUrl","GIPHY_API_URL","setServerUrl","url","FetchError","constructor","message","status","length","undefined","statusText","fetch_error_default","ERROR_PREFIX","DEFAULT_ERROR","identity","i","requestMap","maxLife","errorMaxLife","purgeCache","now","Date","ttl","isError","ts","request","options","apiVersion","noCache","normalizer","serverUrl_","replace","concat","fullUrl","makeRequest","_a2","fetchError","response","fetch","method","ok","json","meta","response_id","_","unexpectedError","request_default","getType","GiphyFetch","apiKey","_this","qsParams","getQS","searchParams","URLSearchParams","api_key","pingback_id","toString","categories","prefix","internal","gifs","arg1","arg2","Array","isArray","ids","join","emoji","emojiDefaultVariations","emojiVariations","animate","m","search","term","q","channel","excludeDynamicResults","rating","subcategories","category","trending","random","related","gif_id","channels","api_default","gifPaginator","fetchGifs","initialGifs","gifIds","g","offset","isDoneFetching","pagination","newGifs","count","total_count","includes","push","_a"],"sources":["/Users/Tian/Documents/blink2/node_modules/@giphy/js-fetch-api/dist/index.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\")\n    return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not supported');\n});\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// package.json\nvar require_package = __commonJS({\n  \"package.json\"(exports, module) {\n    module.exports = {\n      scripts: {\n        lint: \"run -T eslint . --ext .ts,.tsx\",\n        clean: \"rm -rf ./dist\",\n        dev: \"parcel public/test.html\",\n        docs: \"typedoc src/index.ts\",\n        build: \"run -T tsup src/index.ts --format cjs,esm --dts && run -T publint\",\n        prepublish: \"npm run clean && npm run build\",\n        test: \"run -T jest --config ./jestconfig.js\",\n        \"test:watch\": \"run -T jest --config ./jestconfig.js --watchAll\"\n      },\n      name: \"@giphy/js-fetch-api\",\n      version: \"5.4.0\",\n      description: \"Javascript API to fetch gifs and stickers from the GIPHY API.\",\n      homepage: \"https://github.com/Giphy/giphy-js/tree/master/packages/fetch-api\",\n      main: \"dist/index.cjs\",\n      types: \"dist/index.d.ts\",\n      module: \"dist/index.js\",\n      type: \"module\",\n      sideEffects: false,\n      exports: {\n        \".\": {\n          types: \"./dist/index.d.ts\",\n          import: \"./dist/index.js\",\n          require: \"./dist/index.cjs\"\n        },\n        \"./package.json\": \"./package.json\"\n      },\n      files: [\n        \"dist/\",\n        \"src/**/*\"\n      ],\n      license: \"MIT\",\n      publishConfig: {\n        access: \"public\"\n      },\n      dependencies: {\n        \"@giphy/js-types\": \"*\",\n        \"@giphy/js-util\": \"*\"\n      },\n      devDependencies: {\n        \"jest-fetch-mock\": \"^3.0.3\",\n        \"parcel-bundler\": \"latest\",\n        typedoc: \"^0.20.37\",\n        \"typedoc-thunder-theme\": \"^0.0.3\",\n        typescript: \"^5.0.4\"\n      }\n    };\n  }\n});\n\n// src/index.ts\nimport { appendGiphySDKRequestHeader, getGiphySDKRequestHeaders } from \"@giphy/js-util\";\n\n// src/api.ts\nimport { getPingbackId } from \"@giphy/js-util\";\n\n// src/normalize/gif.ts\nvar BOOL_PROPS = [\n  \"is_anonymous\",\n  \"is_community\",\n  \"is_featured\",\n  \"is_hidden\",\n  \"is_indexable\",\n  \"is_preserve_size\",\n  \"is_realtime\",\n  \"is_removed\",\n  \"is_sticker\",\n  \"is_dynamic\"\n  // not finalized, and not adding to Gif type until type RFC is finished\n];\nvar USER_BOOL_PROPS = [\"suppress_chrome\", \"is_public\", \"is_verified\"];\nvar makeBool = (obj) => (prop) => obj[prop] = !!obj[prop];\nvar getTag = (tag) => typeof tag === \"string\" ? tag : tag.text;\nvar normalize = (gif) => {\n  const newGif = __spreadValues({}, gif);\n  newGif.id = String(newGif.id);\n  newGif.tags = (newGif.tags || []).map(getTag);\n  BOOL_PROPS.forEach(makeBool(newGif));\n  Object.keys(newGif.images || {}).forEach((name) => {\n    const img = newGif.images[name];\n    img.width = parseInt(img.width);\n    img.height = parseInt(img.height);\n  });\n  const { user } = newGif;\n  if (user) {\n    const newUser = __spreadValues({}, user);\n    USER_BOOL_PROPS.forEach(makeBool(newUser));\n    newGif.user = newUser;\n  }\n  return newGif;\n};\nvar normalizeGif = (result) => {\n  result.data = normalize(result.data);\n  return result;\n};\nvar normalizeGifs = (result) => {\n  result.data = result.data.map((gif) => normalize(gif));\n  return result;\n};\n\n// src/constants.ts\nvar gl = (typeof window !== \"undefined\" ? window : global) || {};\nvar serverUrl = gl.GIPHY_API_URL || \"https://api.giphy.com/v1/\";\nvar setServerUrl = (url) => {\n  serverUrl = url;\n};\n\n// src/fetch-error.ts\nvar FetchError = class extends Error {\n  constructor(message, url, status = 0, statusText = \"\") {\n    super(message);\n    this.url = url;\n    this.status = status;\n    this.statusText = statusText;\n  }\n};\nvar fetch_error_default = FetchError;\n\n// src/request.ts\nvar ERROR_PREFIX = `@giphy/js-fetch-api: `;\nvar DEFAULT_ERROR = \"Error fetching\";\nvar identity = (i) => i;\nvar requestMap = {};\nvar maxLife = 6e4;\nvar errorMaxLife = 6e3;\nvar purgeCache = () => {\n  const now = Date.now();\n  Object.keys(requestMap).forEach((key) => {\n    const ttl = requestMap[key].isError ? errorMaxLife : maxLife;\n    if (now - requestMap[key].ts >= ttl) {\n      delete requestMap[key];\n    }\n  });\n};\nfunction request(url, options = {}) {\n  const { apiVersion = 1, noCache = false, normalizer = identity } = options;\n  const serverUrl_ = serverUrl.replace(/\\/v\\d+\\/$/, `/v${apiVersion}/`);\n  purgeCache();\n  if (!requestMap[url] || noCache) {\n    const fullUrl = `${serverUrl_}${url}`;\n    const makeRequest = () => __async(this, null, function* () {\n      var _a2;\n      let fetchError;\n      try {\n        const response = yield fetch(fullUrl, {\n          method: \"get\"\n        });\n        if (response.ok) {\n          const result = yield response.json();\n          if (!((_a2 = result.meta) == null ? void 0 : _a2.response_id)) {\n            throw { message: `synthetic response` };\n          } else {\n            return normalizer(result);\n          }\n        } else {\n          let message = DEFAULT_ERROR;\n          try {\n            const result = yield response.json();\n            if (result.message)\n              message = result.message;\n          } catch (_) {\n          }\n          if (requestMap[url]) {\n            requestMap[url].isError = true;\n          }\n          fetchError = new fetch_error_default(\n            `${ERROR_PREFIX}${message}`,\n            fullUrl,\n            response.status,\n            response.statusText\n          );\n        }\n      } catch (unexpectedError) {\n        fetchError = new fetch_error_default(unexpectedError.message, fullUrl);\n        if (requestMap[url]) {\n          requestMap[url].isError = true;\n        }\n      }\n      throw fetchError;\n    });\n    requestMap[url] = { request: makeRequest(), ts: Date.now() };\n  }\n  return requestMap[url].request;\n}\nvar request_default = request;\n\n// src/api.ts\nvar getType = (options) => options && options.type ? options.type : \"gifs\";\nvar GiphyFetch = class {\n  constructor(apiKey, qsParams = {}) {\n    /**\n     * @hidden\n     */\n    this.getQS = (options = {}) => {\n      const searchParams = new URLSearchParams(__spreadValues(__spreadProps(__spreadValues({}, options), {\n        api_key: this.apiKey,\n        pingback_id: getPingbackId()\n      }), this.qsParams));\n      return searchParams.toString();\n    };\n    this.apiKey = apiKey;\n    this.qsParams = qsParams;\n  }\n  /**\n   * A list of categories\n   *\n   * @param {CategoriesOptions} [options]\n   * @returns {Promise<CategoriesResult>}\n   */\n  categories(options) {\n    return request_default(`gifs/categories?${this.getQS(options)}`);\n  }\n  /**\n   * Get a single gif by a id\n   * @param {string} id\n   * @returns {Promise<GifsResult>}\n   **/\n  gif(id, options) {\n    const prefix = (options == null ? void 0 : options.internal) ? \"internal/\" : \"\";\n    return request_default(`${prefix}gifs/${id}?${this.getQS()}`, { normalizer: normalizeGif });\n  }\n  gifs(arg1, arg2) {\n    if (Array.isArray(arg1)) {\n      return request_default(`gifs?${this.getQS({ ids: arg1.join(\",\") })}`, {\n        normalizer: normalizeGifs\n      });\n    }\n    return request_default(`gifs/categories/${arg1}/${arg2}?${this.getQS()}`, {\n      normalizer: normalizeGifs\n    });\n  }\n  emoji(options) {\n    return request_default(`emoji?${this.getQS(options)}`, { normalizer: normalizeGifs });\n  }\n  /**\n   * Returns a list of all the default emoji variations\n   *\n   * @param {PaginationOptions} options\n   * @returns {Promise<GifsResult>}\n   **/\n  emojiDefaultVariations(options) {\n    return request_default(`emoji?${this.getQS(options)}`, {\n      apiVersion: 2,\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Returns a list of gifs representing all the variations for the emoji\n   *\n   * @param {string} id\n   * @returns {Promise<NonPaginatedGifsResult>}\n   **/\n  emojiVariations(id) {\n    return request_default(`emoji/${id}/variations?${this.getQS()}`, {\n      apiVersion: 2,\n      normalizer: normalizeGifs\n    });\n  }\n  animate(text, options = {}) {\n    const qsParams = this.getQS(__spreadProps(__spreadValues({}, options), { m: text }));\n    return request_default(`text/animate?${qsParams}`, { normalizer: normalizeGifs });\n  }\n  /**\n   * @param term: string The term you're searching for\n   * @param options: SearchOptions\n   * @returns {Promise<GifsResult>}\n   **/\n  search(term, options = {}) {\n    const q = options.channel ? `@${options.channel} ${term}` : term;\n    let excludeDynamicResults;\n    if (options.type === \"text\") {\n      excludeDynamicResults = true;\n    }\n    const qsParams = this.getQS(__spreadProps(__spreadValues({ rating: \"pg-13\" }, options), { q, excludeDynamicResults }));\n    return request_default(`${getType(options)}/search?${qsParams}`, { normalizer: normalizeGifs });\n  }\n  /**\n   * Get a list of subcategories\n   * @param {string} category\n   * @param {SubcategoriesOptions} options\n   * @returns {Promise<CategoriesResult>}\n   */\n  subcategories(category, options) {\n    return request_default(`gifs/categories/${category}?${this.getQS(options)}`);\n  }\n  /**\n   * Get trending gifs\n   *\n   * @param {TrendingOptions} options\n   * @returns {Promise<GifsResult>}\n   */\n  trending(options = {}) {\n    return request_default(`${getType(options)}/trending?${this.getQS(__spreadValues({ rating: \"pg-13\" }, options))}`, {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Get a random gif\n   * @param {RandomOptions} options\n   * @returns {Promise<GifResult>}\n   **/\n  random(options) {\n    return request_default(`${getType(options)}/random?${this.getQS(__spreadValues({ rating: \"pg-13\" }, options))}`, {\n      noCache: true,\n      normalizer: normalizeGif\n    });\n  }\n  /**\n   * Get related gifs by a id\n   * @param {string} id\n   * @param {SubcategoriesOptions} options\n   * @returns {Promise<GifsResult>}\n   **/\n  related(id, options = {}) {\n    const { type = \"gifs\" } = options;\n    return request_default(\n      `${type}/related?${this.getQS(__spreadValues({\n        gif_id: id,\n        rating: \"pg-13\"\n      }, options))}`,\n      { normalizer: normalizeGifs }\n    );\n  }\n  /**\n   * Search for channels based on a term\n   * @param {string} term\n   * @param options: SearchOptions\n   * @returns {Promise<ChannelsResult>}\n   **/\n  channels(term, options = {}) {\n    return request_default(\n      `channels/search?${this.getQS(__spreadValues({ q: term, rating: \"pg-13\" }, options))}`\n    );\n  }\n};\nvar api_default = GiphyFetch;\n\n// src/paginator.ts\nvar gifPaginator = (fetchGifs, initialGifs = []) => {\n  const gifs = [...initialGifs];\n  const gifIds = initialGifs.map((g) => g.id);\n  let offset = initialGifs.length;\n  let isDoneFetching = false;\n  return () => __async(void 0, null, function* () {\n    if (isDoneFetching) {\n      return gifs;\n    }\n    const result = yield fetchGifs(offset);\n    const { pagination, data: newGifs } = result;\n    offset = pagination.count + pagination.offset;\n    isDoneFetching = offset === pagination.total_count;\n    newGifs.forEach((gif) => {\n      const { id } = gif;\n      if (!gifIds.includes(id)) {\n        gifs.push(gif);\n        gifIds.push(id);\n      }\n    });\n    return [...gifs];\n  });\n};\n\n// src/index.ts\nvar _a;\nif (typeof __require !== \"undefined\") {\n  const { version } = require_package();\n  if (!((_a = getGiphySDKRequestHeaders()) == null ? void 0 : _a.get(`X-GIPHY-SDK-NAME`))) {\n    appendGiphySDKRequestHeader(`X-GIPHY-SDK-NAME`, \"FetchAPI\");\n    appendGiphySDKRequestHeader(`X-GIPHY-SDK-VERSION`, version);\n  }\n}\nexport {\n  fetch_error_default as FetchError,\n  api_default as GiphyFetch,\n  gifPaginator,\n  request_default as request,\n  serverUrl,\n  setServerUrl\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}